{"version":3,"file":"yogafire.umd.js","sources":["../../libs/is-plane-object.js","../../src/storage.js","../../src/helpers.js","../../src/add-event-listeners.js","../../src/single-events.js","../../src/yogafire.js","../../src/cease-fire.js"],"sourcesContent":["const isObject = value => value != null && typeof value === 'object' && Array.isArray(value) === false;\nconst isObjectObject = value => isObject(value) === true && Object.prototype.toString.call(value) === '[object Object]';\n\n// Is plane object.\nexport default value => {\n    const valueConstructor = value.constructor;\n    const constructorPrototype = valueConstructor.prototype;\n\n    if (isObjectObject(value) === false) {\n        return false;\n    }\n\n    if (typeof valueConstructor !== 'function') {\n        return false;\n    }\n\n    if (isObjectObject(constructorPrototype) === false) {\n        return false;\n    }\n    // eslint-disable-next-line \n    if ((constructorPrototype).hasOwnProperty('isPrototypeOf') === false) {\n        return false;\n    }\n    return true;\n};\n","const storage = { attachedEvents: null, ignoreSuspects: {} };\nexport default storage;\n","export const isString = value => typeof value === 'string';\nexport const isPrimitive = value => isString(value) || typeof value === 'number';\nexport const isFunction = value => typeof value === 'function';\nexport const isElement = value => value instanceof window.Element;\nexport const getElement = selector => document.querySelector(selector);\nexport const newError = message => {\n    throw new Error(message);\n};\nlet once = true;\nconst notice = (message, style) => {\n    if (once) {\n        // eslint-disable-next-line\n        console.log(message, style);\n        once = false;\n    }\n};\nexport const hasProperty = (obj, property) => !!Object.getOwnPropertyDescriptor(obj, property);\nexport const error = (value, parameter, linkHash) => {\n    notice('%c :: yogafire ::', 'color: #999;');\n    throw new Error(\n        `\"${value}\" is invalid, see ${parameter} \\nðŸ”— https://github.com/julienetie/yogafire/wiki/Docs${linkHash}\\n`);\n};\n","import storage from './storage';\nimport { error, hasProperty, isString } from './helpers';\n\n/**\n * Attaches event listeners according to event discriptions.\n *\n * @param {Array} eventDescriptions - Event listener descriptions to be attached to the document.\n */\nexport default eventDescriptions => {\n    /**\n     * Checks if a tagName exist within suspects.\n     *\n     * @param {Array} cleanSuspects - Suspects with removed prefixes.\n     * @param {string} tagName - Target tagName.\n     */\n    const checkTagName = (cleanSuspects, tagName) => cleanSuspects.includes(tagName);\n\n\n    /**\n     * Manages suspects, targets and the storage.ignoredTargets data.\n     *\n     * @param {Object} e - The event object.\n     * @param {Array} suspects - The possible targets.\n     * @param {Function} eventSetName - The fireConfig property name.\n     */\n    const isTarget = (e, suspects, eventSetName) => {\n        const target = e.target;\n        const targetClassName = target.className;\n\n        // Check for suspects ot ignore.\n        const hasSuspectsToIgnore = hasProperty(storage.ignoreSuspects, eventSetName);\n        let vettedSuspects;\n\n        if (hasSuspectsToIgnore) {\n            const suspectsToIgnore = storage.ignoreSuspects[eventSetName];\n            vettedSuspects = suspects.filter(\n                suspect => !suspectsToIgnore.includes(suspect)\n            );\n        } else {\n            vettedSuspects = suspects;\n        }\n\n        // Removes class and id prefixes.\n        const cleanSuspects = vettedSuspects.map(\n            suspect => suspect.replace('.', '').replace('#', '')\n        );\n\n        // Id match.\n        if (cleanSuspects.includes(target.id)) {\n            return true;\n            // Class match.\n        } else if (targetClassName) {\n            const hasClass = cleanSuspects\n                .filter(suspect => targetClassName.includes(suspect)).length > 0;\n            if (hasClass) {\n                return true;\n            }\n            return checkTagName(cleanSuspects, target.tagName);\n        }\n        return checkTagName(cleanSuspects, target.tagName);\n    };\n\n\n    const attachedEvent = eventDescriptions\n        .map(({ eventType, suspects, handler, eventSetName }, index) => {\n            if (!isString(eventType)) {\n                error(eventType, 'eventType', '*#eventType');\n            }\n\n            const handlerWrapper = e => {\n                if (isTarget(e, suspects, eventSetName)) {\n                    handler(e, e.target);\n                }\n            };\n\n            const addEvent = () => document.addEventListener(\n                eventType, handlerWrapper, false\n            );\n\n            addEvent();\n\n            const removeEvent = () => document.removeEventListener(\n                eventType, handlerWrapper, false\n            );\n\n            return {\n                eventType,\n                suspects,\n                handler,\n                useCapture: false,\n                eventSetName,\n                index,\n                addEvent,\n                removeEvent\n            };\n        });\n    // Share attached events between modules.\n    storage.attachedEvents = attachedEvent;\n};\n","import { isString, isElement, getElement, newError } from './helpers';\n\nconst documentErrorMessage = 'Use an object parameter for global delegation.';\n\n/**\n * Represents a sum.\n *\n * @param {HTMLElement|string|Array} targetElements - A selector, Element or array of either.\n * @param {Array} eventsArgs - Parameters for addEventListener.\n * @returns {Array} Returns singleCeaseFire functions in the order of provided targetElements.\n */\nexport default (targetElements, ...eventsArgs) => {\n    const eventsArgsCopy = Array.from(eventsArgs);\n    const eventsArgsCopyLength = eventsArgsCopy.length;\n    let elements;\n\n    // Check selector types.\n    if (isString(targetElements)) {\n        if (targetElements === 'document') {\n            newError(documentErrorMessage);\n        }\n        elements = [getElement(targetElements)];\n    } else {\n        if (targetElements === document) {\n            newError(documentErrorMessage);\n        }\n        elements = isElement(targetElements) ? [targetElements] : targetElements;\n    }\n\n    const singleCeaseFires = elements\n        .map(selector => isString(selector) ? getElement(selector) : selector)\n        .map(element => {\n            if (eventsArgsCopyLength === 2) {\n                eventsArgsCopy.push('false');\n            }\n            element.addEventListener(...eventsArgsCopy);\n\n            // singleCeaseFire functions.\n            return () => element.removeEventListener(...eventsArgsCopy);\n        });\n\n    return elements.length === 1 ? singleCeaseFires[0] : singleCeaseFires;\n};\n","import isPlaneObject from '../libs/is-plane-object';\nimport addEventListeners from './add-event-listeners';\nimport { isString, isElement, isFunction, error } from './helpers';\nimport singleEvents from './single-events';\n\n\n/**\n * Enclosing function.\n *\n * @returns {Function} List of event details.\n */\nconst fireEnclosing = () => {\n    const handlerLinkingList = [];\n    const handlerList = [];\n    const eventSetNameList = [];\n    const suspectsList = [];\n\n    /**\n     * The yogafire API.\n     *\n     * @param {Object|string|Element| Array} fireConfig - The event delegation\n     * config or first parameter for singleEvents.\n     * @param {Array} singleParams - Event type, handler and use capture\n     * parameters for singleEvents.\n     */\n    return function yogafire(fireConfig, ...singleParams) {\n        // Ensure fireConfig is defined.\n        if (fireConfig === undefined) {\n            error(fireConfig, 'fireConfig', '*#fireConfig');\n        }\n\n\n        // Check if usage requires fireConfig or singleEvent API.\n        if (!isPlaneObject(fireConfig)) {\n            return singleEvents(fireConfig, ...singleParams);\n        }\n\n        // Process each eventSet.\n        const eventsObjectKeys = Object.keys(fireConfig);\n        const eventListeners2d = eventsObjectKeys.map(eventSetName => {\n            const { suspect, suspects, handler } = fireConfig[eventSetName];\n            // Treats suspects and suspect synonomously.\n            const suspectsSynonomous = suspects || suspect;\n            let resolvedHandler;\n\n\n            const isSuspectsValid = [\n                isElement(suspectsSynonomous),\n                isString(suspectsSynonomous),\n                Array.isArray(suspectsSynonomous)\n            ].some(typeCheckValue => typeCheckValue);\n\n            if (!isSuspectsValid) {\n                error(suspectsSynonomous, 'suspect|suspects', '*#suspect');\n            }\n\n            if (isFunction(handler)) {\n                // Add eventSetNames as pre-existing properties for linkage.\n                handlerLinkingList.push(eventSetName);\n                handlerList.push(handler);\n                resolvedHandler = handler;\n            } else if (isString(handler)) {\n                // Checks for handleLink.\n                const handlerLinkIndex = handlerLinkingList.indexOf(handler);\n                resolvedHandler = handlerList[handlerLinkIndex];\n            } else {\n                error(suspectsSynonomous, 'handler', '*#handler');\n            }\n\n            eventSetNameList.push(eventSetName);\n            suspectsList.push(suspectsSynonomous);\n\n            const isSuspectsLinkIndex = eventSetNameList.indexOf(suspectsSynonomous);\n\n            // Checks for suspectsLink.\n            const resolvedSuspects = isSuspectsLinkIndex >= 0 ? suspectsList[\n                isSuspectsLinkIndex\n            ] : suspectsSynonomous;\n\n            return eventSetName.split(':')\n                .map(eventType => {\n                    const wrappedSuspects = isString(resolvedSuspects) ? [\n                        resolvedSuspects\n                    ] : resolvedSuspects;\n                    return {\n                        eventType,\n                        suspects: wrappedSuspects,\n                        handler: resolvedHandler,\n                        eventSetName\n                    };\n                });\n        });\n\n        // Flattern event listeners.\n        const eventListeners = eventListeners2d.reduce((a, b) => a.concat(b), []);\n\n        // Set up event listeners for delegation.\n        return addEventListeners(eventListeners);\n    };\n};\n\nexport default fireEnclosing();\n","import storage from './storage';\nimport isPlaneObject from '../libs/is-plane-object';\nimport { newError, hasProperty } from './helpers';\n\nconst notAnArray = 'ignoreSuspects should be an Array';\n\n\n/**\n * API for removing events and ignoring suspects.\n *\n * @param {Object} ceaseFireConfig - Cease-fire Options.\n */\nconst ceasefire = ceaseFireConfig => {\n    // Ignore suspects\n    if (hasProperty(ceaseFireConfig, 'ignoreSuspects')) {\n        if (isPlaneObject(ceaseFireConfig.ignoreSuspects)) {\n            Object.keys(ceaseFireConfig.ignoreSuspects)\n                .map(suspectToIgnore => {\n                    const ignoredValue = ceaseFireConfig.ignoreSuspects[\n                        suspectToIgnore\n                    ];\n                    const ignoredValueArray = Array\n                        .isArray(ignoredValue) ? ignoredValue : [ignoredValue];\n\n                    // Add suspect to ignoreSuspects.\n                    storage.ignoreSuspects[\n                        suspectToIgnore\n                    ] = ignoredValueArray;\n\n                    // @todo Doing nothing.\n                    return suspectToIgnore;\n                });\n        } else {\n            newError(notAnArray);\n        }\n    }\n\n    // Remove Events.\n    if (hasProperty(ceaseFireConfig, 'removeEvents')) {\n        if (Array.isArray(ceaseFireConfig.removeEvents)) {\n            storage.attachedEvents = storage.attachedEvents.filter(eventDetails => {\n                const hasEventToRemove = ceaseFireConfig.removeEvents.some(\n                    eventToRemove => eventToRemove === eventDetails.identity);\n\n                if (hasEventToRemove) {\n                    // Remove Event.\n                    eventDetails.removeEvent();\n                    return false;\n                }\n                // @todo Doing nothing.\n                return true;\n            });\n        } else {\n            newError(notAnArray);\n        }\n    }\n};\n\n\nexport default ceasefire;\n"],"names":["isObject","value","Array","isArray","isObjectObject","Object","prototype","toString","call","valueConstructor","constructor","constructorPrototype","hasOwnProperty","storage","attachedEvents","ignoreSuspects","isString","isFunction","isElement","window","Element","getElement","document","querySelector","selector","newError","Error","message","once","notice","style","log","hasProperty","obj","property","getOwnPropertyDescriptor","error","parameter","linkHash","checkTagName","cleanSuspects","tagName","includes","isTarget","e","suspects","eventSetName","target","targetClassName","className","hasSuspectsToIgnore","vettedSuspects","suspectsToIgnore","filter","suspect","map","replace","id","hasClass","length","attachedEvent","eventDescriptions","index","eventType","handler","handlerWrapper","addEvent","addEventListener","removeEvent","removeEventListener","documentErrorMessage","targetElements","eventsArgs","eventsArgsCopy","from","eventsArgsCopyLength","elements","singleCeaseFires","push","element","fireEnclosing","handlerLinkingList","handlerList","eventSetNameList","suspectsList","yogafire","fireConfig","undefined","isPlaneObject","singleParams","singleEvents","eventsObjectKeys","keys","eventListeners2d","suspectsSynonomous","resolvedHandler","isSuspectsValid","some","typeCheckValue","handlerLinkIndex","indexOf","isSuspectsLinkIndex","resolvedSuspects","split","wrappedSuspects","eventListeners","reduce","a","b","concat","addEventListeners","notAnArray","ceasefire","ceaseFireConfig","ignoredValue","suspectToIgnore","ignoredValueArray","removeEvents","hasEventToRemove","eventToRemove","eventDetails","identity"],"mappings":"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"}